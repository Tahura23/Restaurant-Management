@model Restaurant_app.Models.Menu


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="card mt-5 shadow-sm">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">Edit Menu</h4>
        </div>
        <div class="card-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.MenuId)
            @Html.HiddenFor(model => model.BranchId)
            @Html.HiddenFor(model => model.RestId)

            @Html.HiddenFor(model => model.CreatedAt)
            @Html.HiddenFor(model => model.CreatedBy)

            <div class="form-group">
                @Html.LabelFor(model => model.MenuName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MenuName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MenuName, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedAt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedAt, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsDeleted)
                        @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.RestId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RestId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RestId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.Label("Branch")
            @Html.DropDownListFor(m => m.BranchId, Model.Branches, "Select a Branch", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BranchId)
        </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="card-footer text-end">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary ms-2" })
            </div>
        </div>
        </div>
        }

        @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
