@model Restaurant_app.Models.MenuItem


@using (Html.BeginForm("Create", "MenuItems", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="card mt-5 shadow-sm">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">Create MenuItem</h4>
        </div>
        <div class="card-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div>
                        <label>Branch</label>
                        @Html.DropDownList("BranchId", ViewBag.Branches as List<SelectListItem>, "Select Branch", new { @id = "BranchId", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div>
                        <label>Menu</label>
                        @Html.DropDownList("MenuId", ViewBag.Menus as List<SelectListItem>, "Select Menu", new { @id = "MenuId", @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div>
                        <label>Item Category</label>
                        @Html.DropDownList("CategoryId", ViewBag.ItemCategories as List<SelectListItem>, "Select Category", new { @id = "CategoryId", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PreparationTime, htmlAttributes: new { @class = "control-label col-md-8" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PreparationTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PreparationTime, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.ItemImage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <img style="margin-top:-14px;" id="PreviewImage" alt="-" height="80" width="80" />
                            <input type="file" name="ProfilePhoto" id="ProfilePhoto" class="form-control" />
                            @Html.ValidationMessageFor(model => model.ItemImage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    </div>
                </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsAvailable)
                                @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="card-footer text-end">
                        <input type="submit" value="Create" class="btn btn-primary" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary ms-2" })
                    </div>
                </div>
            </div>
            }

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")




                <script>
                    $(document).ready(function () {

                        $('#BranchId').change(function () {
                            var branchId = $(this).val();
                            if (branchId) {

                                $.getJSON('/MenuItems/GetMenus', { branchId: branchId }, function (menuData) {
                                    var menuDropdown = $('#MenuId');
                                    menuDropdown.empty().append('<option value="">Select Menu</option>');
                                    $.each(menuData, function (index, menu) {
                                        menuDropdown.append('<option value="' + menu.MenuId + '">' + menu.MenuName + '</option>');
                                    });

                                });

                                $.getJSON('/MenuItems/GetItemCategories', { branchId: branchId }, function (categoryData) {
                                    var categoryDropdown = $('#CategoryId');
                                    categoryDropdown.empty().append('<option value="">Select Category</option>');
                                    $.each(categoryData, function (index, category) {
                                        categoryDropdown.append('<option value="' + category.CategoryId + '">' + category.CategoryName + '</option>');
                                    });
                                });
                            } else {

                                $('#MenuId').empty().append('<option value="">Select Menu</option>');
                                $('#CategoryId').empty().append('<option value="">Select Category</option>');
                            }
                        });
                    });



                    $("#ProfilePhoto").change(function () {
                        readURL(this);
                        function readURL(input) {
                            if (input.files && input.files[0]) {
                                var reader = new FileReader();
                                reader.onload = function (e) {
                                    $('#PreviewImage').attr('src', e.target.result);
                                }
                                reader.readAsDataURL(input.files[0]);
                            }
                        }
                    });
                </script>

            }

